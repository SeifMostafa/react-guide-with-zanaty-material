{"componentChunkName":"component---src-templates-lesson-template-js","path":"/react-dev-tools","result":{"data":{"markdownRemark":{"html":"<p>React has some really great tools to enhance your developer experience. We'll go over a few of them here.</p>\n<h2 id=\"node_envdevelopment\" style=\"position:relative;\"><a href=\"#node_envdevelopment\" aria-label=\"node_envdevelopment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#node_envdevelopment\"></a><code class=\"language-text\">NODE_ENV=development</code></h2>\n<p>React already has a lot of developer conveniences built into it out of the box. What's better is that they automatically strip it out when you compile your code for production.</p>\n<p>So how do you get the debugging conveniences then? Well, if you're using Parcel.js, it will compile your development server with an environment variable of <code class=\"language-text\">NODE_ENV=development</code> and then when you run <code class=\"language-text\">parcel build &lt;entry point&gt;</code> it will automatically change that to <code class=\"language-text\">NODE_ENV=production</code> which is how all the extra weight gets stripped out.</p>\n<p>Why is it important that we strip the debug stuff out? The dev bundle of React is quite a bit bigger and quite a bit slower than the production build. Make sure you're compiling with the correct environmental variables or your users will suffer.</p>\n<h2 id=\"strict-mode\" style=\"position:relative;\"><a href=\"#strict-mode\" aria-label=\"strict mode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#strict-mode\"></a>Strict Mode</h2>\n<p>React has a new strict mode. If you wrap your app in <code class=\"language-text\">&lt;React.StrictMode&gt;&lt;/React.StrictMode&gt;</code> it will give you additional warnings about things you shouldn't be doing. I'm not teaching you anything that would trip warnings from <code class=\"language-text\">React.StrictMode</code> but it's good to keep your team in line and not using legacy features or things that will be soon be deprecated.</p>\n<p>Go to App.js and wrap <code class=\"language-text\">&lt;App /&gt;</code> in the render call in <code class=\"language-text\">&lt;StrictMode&gt;</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">// import at top\nimport { StrictMode } from &quot;react&quot;;\n\n// replace render\nrender(\n  &lt;StrictMode&gt;\n    &lt;App /&gt;\n  &lt;/StrictMode&gt;,\n  document.getElementById(&quot;root&quot;)\n);</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"dev-tools\" style=\"position:relative;\"><a href=\"#dev-tools\" aria-label=\"dev tools permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#dev-tools\"></a>Dev Tools</h2>\n<p>React has wonderful dev tools that the core team maintains. They're available for both Chromium-based browsers and Firefox. They let you do several things like explore your React app like a DOM tree, modify state and props on the fly to test things out, tease out performance problems, and programtically manipulate components. Definitely worth downloading now.</p>","frontmatter":{"path":"/react-dev-tools","title":"React Dev Tools","order":"10A","section":"Core React Concepts","description":"React Dev Tools"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":"10A","path":"/react-dev-tools","title":"React Dev Tools"}}},{"node":{"frontmatter":{"order":"11A","path":"/react-state-and-lifecycles","title":"State and Lifecycle Methods with React"}}},{"node":{"frontmatter":{"order":"2A","path":"/why-react-is-awesome","title":"Why React is Awesome"}}},{"node":{"frontmatter":{"order":"3A","path":"/pure-react","title":"Pure React"}}},{"node":{"frontmatter":{"order":"4A","path":"/components","title":"Components"}}},{"node":{"frontmatter":{"order":"5A","path":"/npm","title":"NPM"}}},{"node":{"frontmatter":{"order":"6A","path":"/create-react-app","title":"Kick off with create-react-app"}}},{"node":{"frontmatter":{"order":"7A","path":"/prettier","title":"Prettier"}}},{"node":{"frontmatter":{"order":"8A","path":"/jsx","title":"JSX"}}},{"node":{"frontmatter":{"order":"9A","path":"/component-composition","title":"Component Composition"}}},{"node":{"frontmatter":{"order":"1A","path":"/intro","title":"Introduction"}}}]}},"pageContext":{}},"staticQueryHashes":["2959687377"]}